<?xml version="1.0" encoding="UTF-8"?>

<configuration>
    <!--定义日志文件的存储地址,使用绝对路径-->
    <property name="LOG_HOME" value="F:/project/my/MyBlog/log/"/>
    <!--生成日志的文件夹名称-->
    <springProperty scope="context" name="LOG_HOME" source="logging.rootpath" defaultValue="logs/"/>
    <!--生成的文本文件前缀-->
    <springProperty scope="context" name="SERVER_NAME" source="spring.application.name" defaultValue="ZYInterface"/>
    <springProperty scope="context" name="PORT" source="server.port" defaultValue=""/>
    <!--生成的文本文件编码格式-->
    <springProperty scope="context" name="ENCODING" source="logging.encoding" defaultValue="GBK"/>
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />
    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />
    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />
    <!--控制台输出的信息格式-->
    <property name="CONSOLE_LOG_PATTERN" value="${CONSOLE_LOG_PATTERN:-%clr(%d{HH:mm:ss.SSS}){faint} %clr(%-5level) - %clr(%-40.40logger{39}){blue} %clr(:){faint}  -l%-3L %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>



    <!-- Console 控制台输出设置 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <Pattern>${CONSOLE_LOG_PATTERN}</Pattern>
            <charset>${ENCODING}</charset>
        </encoder>
    </appender>

    <!-- 按照每天生成日志文件 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <fileNamePattern>${LOG_HOME}/%d{yyyy-MM-dd}/${SERVER_NAME}-%d{yyyy-MM-dd}-${PORT}.log</fileNamePattern>
        </rollingPolicy>
        <encoder>
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <!--日志文件输出的信息格式-->
            <pattern> %d{ HH:mm:ss.SSS } %-5level -> %msg%n</pattern>
            <!--            <pattern> %d{ HH:mm:ss.SSS } -> %-5level %-40.40logger{39} Line:%-3L - %msg%n</pattern>-->
            <!--<pattern> > %d{HH:mm:ss.SSS} %-5level %-40.40logger{39} Line:%-3L - %msg%n</pattern-->>
        </encoder>
    </appender>

    <!-- 异步输出 -->
    <appender name="ASYNC" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>512</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="FILE"/>
    </appender>
    <!--输出等级和需要输出在哪些地方(ref的内容是上方配置的节点的name)-->
    <logger name="com.test.newdemo" level="DEBUG">
        <appender-ref ref="FILE"/>
        <appender-ref ref="CONSOLE"/>
    </logger>
    <!--    <root level="ERROR">-->
    <!--        <appender-ref ref="FILE"/>-->
    <!--&lt;!&ndash;        <appender-ref ref="FILE"/>&ndash;&gt;-->
    <!--        <appender-ref ref="CONSOLE"/>-->
    <!--    </root>-->
</configuration>
